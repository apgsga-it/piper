plugins {
  	id 'groovy'
   	id 'application'
 	id 'org.springframework.boot' version '1.5.9.RELEASE'
  	id 'nebula.ospackage' version '4.10.0'
  	id 'ivy-publish'  
  
}
apply plugin: 'nebula.ospackage'
apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'
apply plugin: 'ivy-publish'
apply plugin: 'com.jfrog.artifactory'

description = 'Server, which provides  Patch Functionality through a Restful Controller  '
jar {
	baseName = 'apg-patch-service-server'
	//exclude('**/application.properties')
}

dependencies {
	compile project(':apg-patch-service-common')
	compile project(':apg-patch-artifact-querymanager')
	compile group: 'com.offbytwo.jenkins', name: 'jenkins-client'
	compile group: 'de.codecentric', name: 'spring-boot-admin-starter-client'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter'	
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat'	
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'	
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'	
	compile group: 'org.springframework', name: 'spring-context'		
	compile group: 'org.springframework', name: 'spring-core'
	compile group: 'org.springframework', name: 'spring-webmvc'
	compile group: 'org.springframework.data', name: 'spring-data-commons'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
	compile group: 'com.jcraft', name: 'jsch'
	compile group: 'org.jasypt', name: 'jasypt'
	compile group: 'commons-io', name: 'commons-io'
	compile group: 'ch.qos.logback', name: 'logback-classic'
	compile group: 'commons-lang', name: 'commons-lang'
	compile group: 'org.slf4j', name: 'slf4j-api'
	compile group: 'com.google.guava', name: 'guava'
	compile group: 'commons-transaction', name: 'commons-transaction'
	compile group: 'javax.transaction', name: 'jta'
	testCompile group: 'org.springframework', name: 'spring-test'
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'	
	testCompile group: 'org.codehaus.groovy' , name: 'groovy-all'
}

sourceSets {
  test {
    resources {
      srcDir 'src/test/java'
      include '**/*.properties' 
    }
  }
}


def pkgVersion = version
def repoTarget= version.endsWith("SNAPSHOT") ? "snapshots" : "releases"

def homeDir = "/opt/${project.name}"


// Netflix Nebula Os Package Configuration, see : https://github.com/nebula-plugins/gradle-ospackage-plugin/wiki
ospackage {
	packageName = "${project.name}"
	version = "${pkgVersion}"
	release = 1
	os = LINUX
	type = BINARY
	arch = NOARCH
	provides('aps')

	preInstall file("packaging/rpm/pre-install.sh")
	postInstall file("packaging/rpm/post-install.sh")
    preUninstall file("packaging/rpm/pre-uninstall.sh")
    postUninstall file("packaging/rpm/post-uninstall.sh")

	into "${homeDir}"
	user ""
	permissionGroup "apg-patch-service-server"
	
	from(jar.outputs.files) {
		// Strip the version from the jar filename
		rename { String fileName ->
			fileName.replace("-${project.version}", "")
		}
		fileMode 0644
		into "bin"
	}
	
	from('packaging/service') {
		into '/etc/systemd/system'
		include '*.service'
		addParentDirs false
	// TODO (che, 1.2.2018) Bug somewhere along the nebula / gradle chain
	// See also https://github.com/nebula-plugins/nebula-publishing-plugin/pull/71
	//	expand project.properties
		user 'root'
		permissionGroup 'root'
		fileMode = 0644
	}

	// Copy the config files
	from("packaging/conf") {
		into "/etc/opt/${project.name}"
		fileType CONFIG | NOREPLACE
		user 'root'
		permissionGroup 'root'
		// TODO (che,11.4)
		fileMode 0775
	}
	
	from("packaging/common") {
	   	into "/etc/opt/apg-patch-common"
		user "root"
		permissionGroup "root"
		// TODO (che 22.5) :  we need a common group for this directory
		fileMode 0644 
		fileType CONFIG | NOREPLACE
	}
	

	
	directory("/var/opt/${project.name}", 0755 )
	//Log dir
	directory("/var/opt/${project.name}/log", 0755 )
	
	// Local Maven Repo
	directory("/var/opt/${project.name}/mavenrepo", 0755 )
	
	from("packaging/db") {
		into "/var/opt/${project.name}/db"
		fileType CONFIG | NOREPLACE
		user "root"
		permissionGroup "root"
		fileMode 0755 
	}
	
	from("src/main/groovy") {
		into "/var/opt/${project.name}/scripts"
		user "root"
		permissionGroup "root"
		fileMode 0755 
	}
	
}

 buildRpm {
	directory("/var/opt/${project.name}", 0755 )
	//Log dir
	directory("/var/opt/${project.name}/log", 0755 )
	
		//DB dir
	directory("/var/opt/${project.name}/dbwork", 0755 )
	
	// Local Maven Repo
	directory("/var/opt/${project.name}/mavenrepo", 0755 )
}






publishing {
	publications {
		yumRpm(IvyPublication) {
			artifact buildRpm.outputs.getFiles().getSingleFile()
		}
	}
}

artifactoryPublish {}.dependsOn(buildRpm)
artifactory {
    contextUrl = "${mavenRepoBaseUrl}/"  
    publish {

        repository {
            repoKey = 'yumrepodev'   
            username = mavenRepoUser
            password = mavenRepoPwd
            ivy {
                 artifactLayout = "${buildRpm.outputs.getFiles().getSingleFile().getName()}"
            }
        }
        defaults {
            publications ('yumRpm')
            publishBuildInfo = false  
            publishArtifacts = true   
            publishPom = false   
            publishIvy = false  
        }
    }
}

