plugins {
  	id 'groovy'
   	id 'application'
 	id "org.springframework.boot" version "1.5.9.RELEASE"
  	id "nebula.ospackage" version "4.6.0"
  
}
apply plugin: "nebula.ospackage"
apply plugin: "org.springframework.boot"
apply plugin: 'groovy'

description = 'Server, which provides  Patch Functionality through a Restful Controller  '
jar {
	baseName = 'apg-patch-service-server'
}

dependencies {
	compile project(':apg-patch-service-common')
	compile project(':apg-patch-artifact-querymanager')
	compile group: 'com.offbytwo.jenkins', name: 'jenkins-client', version: '0.3.9-SNAPSHOT'
	compile group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: '1.3.2'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter'	
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat'	
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'	
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'	
	compile group: 'org.springframework', name: 'spring-context'		
	compile group: 'org.springframework', name: 'spring-core'
	compile group: 'org.springframework', name: 'spring-webmvc'
	compile group: 'org.springframework.data', name: 'spring-data-commons', version: '1.12.11.RELEASE'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.4'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.4'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.4'
	compile group: 'com.jcraft', name: 'jsch', version: '0.1.54'
	compile group: 'org.jasypt', name: 'jasypt', version: '1.9.0'
	compile group: 'commons-io', name: 'commons-io'
	compile group: 'ch.qos.logback', name: 'logback-classic'
	compile group: 'commons-lang', name: 'commons-lang'
	compile group: 'org.slf4j', name: 'slf4j-api'
	compile group: 'com.google.guava', name: 'guava', version: '23.0'
	testCompile group: 'org.springframework', name: 'spring-test'
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'	
	testCompile group: 'org.codehaus.groovy' , name: 'groovy-all', version: '2.2.1'
}

sourceSets {
  test {
    resources {
      srcDir 'src/test/java'
      include '**/*.properties'
    }
  }
}


def pkgVersion = version
def repoTarget= version.endsWith("SNAPSHOT") ? "snapshots" : "releases"

def homeDir = "/opt/${project.name}"


// Netflix Nebula Os Package Configuration, see : https://github.com/nebula-plugins/gradle-ospackage-plugin/wiki
ospackage {
	packageName = "${project.name}"
	version = "${pkgVersion}"
	release = 13
	os = LINUX
	type = BINARY
	arch = NOARCH

	preInstall file("packaging/rpm/pre-install.sh")
	postInstall file("packaging/rpm/post-install.sh")
    preUninstall file("packaging/rpm/pre-uninstall.sh")
    postUninstall file("packaging/rpm/post-uninstall.sh")

	into "${homeDir}"
	user "apg-patch-service-server"
	permissionGroup "apg-patch-service-server"
	
	from(jar.outputs.files) {
		// Strip the version from the jar filename
		rename { String fileName ->
			fileName.replace("-${project.version}", "")
		}
		fileMode 0644
		into "bin"
	}
	
	from('packaging/service') {
		into '/etc/systemd/system'
		include '*.service'
		addParentDirs false
	// TODO (che, 1.2.2018) Bug somewhere along the nebula / gradle chain
	// See also https://github.com/nebula-plugins/nebula-publishing-plugin/pull/71
	//	expand project.properties
		user 'root'
		permissionGroup 'root'
		fileMode = 0644
	}

	// Copy the config files
	from("packaging/app/conf") {
		into "/etc/opt/${project.name}"
		fileType CONFIG | NOREPLACE
		user 'root'
		permissionGroup 'root'
		fileMode 0777

	}
	
	directory("/var/opt/${project.name}", 0755 )
	//Log dir
	directory("/var/opt/${project.name}/log", 0755 )
	
	// Local Maven Repo
	directory("/var/opt/${project.name}/mavenrepo", 0755 )
	
	from("packaging/app/db") {
		into "/var/opt/${project.name}/db"
		user "root"
		permissionGroup "root"
		fileMode 0755 
	}
	

	
}

 buildRpm {
	directory("/var/opt/${project.name}", 0755 )
	//Log dir
	directory("/var/opt/${project.name}/log", 0755 )
	
	// Local Maven Repo
	directory("/var/opt/${project.name}/mavenrepo", 0755 )
}





publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact buildRpm  {
				extension "rpm"
				classifier "centos"
			}
		}
	}
	repositories {
		maven {
			name ='deployRepo'
			url  "${mavenRepoBaseUrl}/${repoTarget}/"
			credentials {
				username = repoUser
				password = repoPassword
			}
		}
	}
}

	
