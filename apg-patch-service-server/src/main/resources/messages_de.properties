SimplePatchContainerBean.listMavenArtifacts.error=Exception: <{0}> in lastMavenArtifacts  for Patch : {1}
SimplePatchContainerBean.addModuleName.validation.error=Patch cannot be saved as it contains module(s) with invalid name: {0} 
SimplePatchContainerBean.addModuleName.exception=Exception: <{0}> adding Module: {1} to Branch: {2}
SimplePatchContainerBean.getArtifactsWithNameFromBom.exception=Exception: <{0}> when trying to get Artifact name from Bom for version: {1} 
SimplePatchContainerBean.getArtifactNameError.exception=Exception: <{0}> while checking Artifact name {1} for being valid cvs module
SimplePatchContainerBean.save.patchobject.notnull.assert=Patch object null for save
SimplePatchContainerBean.save.patchnumber.notnull.assert=Patch number null for save of Patch : {0}
SimplePatchContainerBean.remove.patchobject.notnull.assert=Patch object null for remove
SimplePatchContainerBean.remove.patchnumber.notnull.assert=Patch number null for save of Patch : {0}
SimplePatchContainerBean.remove.patch.exists.assert=Patch: {0} to remove not found 
SimplePatchContainerBean.findById.patchnumber.notnull.assert=Patch number null for findById
SimplePatchContainerBean.listAllObjectsChangedForDbModule.patch.exists.assert=Patch: {0} to listAllObjectsChangedForDbModule not found 
SimplePatchContainerBean.startInstallPipeline.patchobject.notnull.assert=Patch object null for startInstallPipeline
SimplePatchContainerBean.startInstallPipeline.patchnumber.notnull.assert=Patch number null for startInstallPipeline of Patch : {0}
SimplePatchContainerBean.startInstallPipeline.patch.exists.assert=Patch: {0} to startInstallPipeline not found 
EntwicklungInstallationsbereitAction.patch.exists.assert=Patch with number: {0} for toState Action {1} not found 
PipelineInputAction.patch.exists.assert=Patch with number: {0} for toState Action {1} not found 
GroovyScriptActionExecutor.execute.exception=Exception: <{0}> while Executing Groovy Action script:  {1} failed for Patch : {2} , toStatus: {3} , configDir: {4} and File: {5}
AtomicFileWriteManager.write.exception=Exception: <{0}> while atomic write to File {2} of: {1} 
FilebasedPatchPersistence.findById.exception=Persistance Exception  : <{0}> for findById for Patchnumber: {1}
FilebasedPatchPersistence.patchExists.exception=Persistance Exception : <{0}> for patchExists for Patchnumber:  {0}
FilebasedPatchPersistence.findAllPatchIds.exception=Persistence Exception : <{0}> retrieving all Patch Ids
FilebasedPatchPersistence.removePatch.exception=Persistence Exception : <{0}>  removing Patch {1} 
FilebasedPatchPersistence.getServicesMetaData.exception=Persistence Exception : <{0}> retrieving ServicesMetaData Configuration file
FilebasedPatchPersistence.getDbModules.exception=Persistence Exception : <{0}> retrieving DbModules Configuration file
FilebasedPatchPersistence.listAllFiles.exception=Persistence Exception : <{0}> on listing all Persistent Files
FilebasedPatchPersistence.listFiles.exception=Persistence Exception : <{0}>  on listing all Persistent Files with Prefix {1}
FilebasedPatchPersistence.writeToFile.exception=Persistence Exception : <{0}>  on Json Conversation before writing to file {1}
JschCommandRunner.preProcess.exception=Exception : <{0}>  Jsch connecting to host: {1}
JschCommandRunner.run.exception=Exception : <{0}>  running remote ssh command {1} 
JenkinsPatchClientImpl.createPatchPipelines.error=Creating the Patch Pipelines in Jenkins failed for Patch {0} with {1} 
JenkinsPatchClientImpl.createPatchPipelines.exception=Exception: <{0}> while starting the Jenkins Pipeline Creation Job for Patch:  {1} 
JenkinsPatchClientImpl.startPipeline.error=Starting the Patch Pipeline Job: ${0} in Jenkins failed for Patch: {1} with output: {2} 
JenkinsPatchClientImpl.createPatchPipelines.exception=Exception: <{0}> while starting the Jenkins Pipeline Job  for Patch:  {1} 
JenkinsPatchClientImpl.inputActionForPipeline.error=Jenkins Input Action : {1} for Patch Pipeline Job for Patch: {0} not found
JenkinsPatchClientImpl.processInputAction.exception=Exception: <{0}> while processing Jenkins Input Action for Patch:  {1} 
InstallTargetsUtil.listInstallTargets.exception=Exception: <{0}> while listing Installation Targets from File:  {1} 