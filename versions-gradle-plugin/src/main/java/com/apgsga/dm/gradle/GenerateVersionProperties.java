package com.apgsga.dm.gradle;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;

import org.codehaus.plexus.util.xml.pull.XmlPullParserException;
import org.eclipse.aether.resolution.ArtifactResolutionException;
import org.eclipse.aether.resolution.DependencyResolutionException;
import org.gradle.api.DefaultTask;
import org.gradle.api.GradleScriptException;
import org.gradle.api.InvalidUserDataException;
import org.gradle.api.tasks.TaskAction;

import com.apgsga.artifact.query.ArtifactManager;
import com.google.common.base.Preconditions;

public class GenerateVersionProperties extends DefaultTask {

	@TaskAction
	public void generateVersionsFile() {
		VersionProperties parameters = getProject().getExtensions().findByType(VersionProperties.class);
		if (parameters == null) {
			parameters = new VersionProperties();
		}
		try {
			Properties versionsProperties = ArtifactManager.create(parameters.getLocalMavenRepository())
					.getVersionsProperties(parameters.getMavenVersion());
			System.out.println("versionsProperties: " + versionsProperties.toString());
			String propertiesFilePath = parameters.getPropertiesFilePath();
			System.out.println("properties File Path: " + propertiesFilePath.toString());
			File parentFile = new File(propertiesFilePath);
			if (!parentFile.exists()) {
				System.out.println("Createing: " + parentFile.toString());
				parentFile.mkdir();
			}
			Preconditions.checkState(parentFile.exists(), "PropertiesfilePath doesn't exist: " + propertiesFilePath);
			Preconditions.checkState(parentFile.isDirectory(),
					"PropertiesfilePath is a directory: " + propertiesFilePath);
			Preconditions.checkState(parentFile.canWrite(),
					"PropertiesfilePath isn't writeable: " + propertiesFilePath);
			File versionsPropertiesFile = new File(parentFile, "versions.properties");
			SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
			Date now = new Date();
			String strDate = sdfDate.format(now);
			versionsProperties.store(new FileWriter(versionsPropertiesFile),
					"Generated by : " + this.getClass().getSimpleName() + " at: " + strDate);
			System.out.println("Written: " + versionsPropertiesFile.getAbsolutePath().toString());
		} catch (DependencyResolutionException e) {
			throw new InvalidUserDataException("For config: " + parameters.toString(), e);
		} catch (FileNotFoundException e) {
			throw new InvalidUserDataException("For config: " + parameters.toString(), e);
		} catch (ArtifactResolutionException e) {
			throw new InvalidUserDataException("For config: " + parameters.toString(), e);
		} catch (IOException e) {
			throw new GradleScriptException("For config: " + parameters.toString(), e);
		} catch (XmlPullParserException e) {
			throw new GradleScriptException("For config: " + parameters.toString(), e);
		}
	}

}
